<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Криптография on Блокчейн &amp; Разработка</title>
    <link>https://blockndevcom/categories/%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%BE%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D1%8F/</link>
    <description>Recent content in Криптография on Блокчейн &amp; Разработка</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    <lastBuildDate>Sat, 11 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blockndevcom/categories/%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%BE%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D1%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Хэшировать ли публичные ключи в Биткоин-адресах?</title>
      <link>https://blockndevcom/posts/public-keys-should-be-public/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blockndevcom/posts/public-keys-should-be-public/</guid>
      <description>Как вы знаете, Биткоин-адрес это хэш публичного ключа, закодированный в Base58 (за исключением bech32-адресов) для более удобного чтения. Когда вы переводите биткоины на адрес, вы переводите их именно на хэш публичного ключа, а когда вы выводите их с адреса, вы должны раскрыть сам публичный ключ. Но так было не всегда. В самой первой версии Биткоина, выпущенной Сатоши, перевод происходил на публичный ключ. Это считалось небезопасным, поэтому было сделано хэширование ключей. Но действительно ли открытые публичные ключи это такая проблема?</description>
    </item>
    
    <item>
      <title>Криптография Биткоина</title>
      <link>https://blockndevcom/posts/cryptography-in-bitcoin/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blockndevcom/posts/cryptography-in-bitcoin/</guid>
      <description>Многие считают, что криптография это шифрование, но на самом деле криптография это далеко не только шифрование. И особенно это актуально для Биткоина и вообще крипты. Ни Биткоин, ни подавляющее большинство других криптопроектов не используют шифрование (Лайтнинг использует, кстати).
С криптографией в Биткоине все просто. Вот полный список криптографических алгоритмов, которые в нем используются:
 SHA-256 RIPEMD-160 ECDSA  SHA-256 — это часть стандарта хэширующих функций SHA-2. В него также входят SHA-224, 384 и 512.</description>
    </item>
    
    <item>
      <title>Taproot: что это и зачем он нужен</title>
      <link>https://blockndevcom/posts/whats-taproot/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blockndevcom/posts/whats-taproot/</guid>
      <description>(Этот пост — часть большого паззла. Дописав его я понял, что нужно было бы написать вводный пост по криптографии и некоторым важным механикам. Буду раскрывать тему постепенно.)
P2SH-транзакции (оплата на хэш скрипта), по сути, позволяют создавать смарт-контракты на Биткоине (хоть они и способны лишь проверять права доступа к биткам). Но по сравнению с обычным переводом битков у этого способа есть существенный недостаток: чтобы вывести битки с хэша скрипта, нужно раскрыть весь код скрипта, т.</description>
    </item>
    
    <item>
      <title>Как работают Биткоин-транзакции</title>
      <link>https://blockndevcom/posts/how-bitcoin-transactions-work/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blockndevcom/posts/how-bitcoin-transactions-work/</guid>
      <description>(Это вводный пост перед разбором Taproot. Чтобы понять Taproot, нужно сначала разобраться с тем, как работают транзакции в Биткоине.)
Биткоин-транзакция состоит из двух ключевых элементов: входы (inputs) и выходы (outputs). Биткоины перемещаются не с адреса на адрес, а с выхода одной транзакции на выход другой транзакции. И по сути, биткоины хранятся именно на выходах транзакций, а не на адресах. А входы служат связующим звеном между выходами и используются только в момент создания транзакции.</description>
    </item>
    
    <item>
      <title>Подписи Шнорра в Биткоине: что это и зачем</title>
      <link>https://blockndevcom/posts/why-schnorr-signatures/</link>
      <pubDate>Tue, 28 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blockndevcom/posts/why-schnorr-signatures/</guid>
      <description>На текущий момент для генерации пар ключей и для подписи транзакций в Биткоине используется алгоритм ECDSA, алгоритм цифровой подписи на эллиптических кривых. Сам алгоритм по-прежнему надёжен, но он слишком сложный, что значительно ограничивает использование некоторых его механик. BIP-340 вводит подписи Шнорра вместо подписей ECDSA, при этом оставляя ECDSA для генерации пар ключей. Зачем это нужно?
 Улучшенная безопасность. Алгоритм подписей Шнорра проще, чем ECDSA, и требует меньше обоснований надежности, что снижает количество возможных векторов атаки.</description>
    </item>
    
    <item>
      <title>Криптография и паранойя</title>
      <link>https://blockndevcom/posts/cryptography-and-paranoia/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blockndevcom/posts/cryptography-and-paranoia/</guid>
      <description>Эти слова — синонимы. Параноидальный подход ко всем аспектам и деталям — фундаментальное и неотъемлемое свойство криптографии. Причина этого в том, что невозможно выявить факт взлома криптографического алгоритма. Если алгоритм шифрования взломан, то взломщика невозможно отличить от честного пользователя, в системе они ни чем не будут отличаться. Если сейчас окажется, что какая-то используемая повсеместно хэш-функция уязвима, то уже ничего нельзя будет сделать, нельзя будет выпустить патч и пофиксить баг. Поэтому в любом криптографическом алгоритме не должно быть известных даже теоретических способов взлома.</description>
    </item>
    
  </channel>
</rss>